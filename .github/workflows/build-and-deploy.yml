name: Build Test & Deploy

on:
  push:
    branches: ['feature/*']
    paths-ignore: ['docs/**']
  pull_request:
    types: [opened,synchronize,reopened]
    branches: [main,master]

env:
  NODE_VERSION: '18.x'
  ARTIFACT_NAME: node-app

jobs:
  build:
    name: Run Cypress Test
    runs-on: ubuntu-latest
    steps:      

      - name: Setup Node JS
        uses: actions/setup-node@v3
        with:
            node-version: ${{ env.NODE_VERSION }}

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Static Code Analyzer
        run: |
          echo checking for formatting and linting issues...

      - name: Install Dependencies
        run: npm ci

      - name: Run Test
        run: npm run test

      - name: Build Artifact
        run: npm run build

      - name: Update Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/

      # - name: Run Lighthouse tests
      #   run: npx lighthouse http://localhost:3000 --output json --output-path report.json

      - name: Cypress Run
        # https://github.com/marketplace/actions/cypress-io
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          # config-file: cypress/cypress-base.json
          # env: WEB_APP_URI=${{steps.<ID>.outputs.<SITE_URL>}}
          start: npm start

      # - uses: actions/upload-artifact@v3
      #   if: failure()
      #   with:
      #     name: cypress-screenshots
      #     path: screenshots

  deploy-dev:
    name: Deploy to Dev
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: http://dev.example.com
    steps:

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Deploy to Dev Env
        run: echo Deploying to dev...

  deploy-qa:
    name: Deploy to QA
    needs: [build, deploy-dev]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        browser: [chrome, firefox]
    runs-on: ${{ matrix.os }}
    environment:
      name: qa
      url: http://qa.example.com
    steps:

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Deploy to QA Env
        run: echo Deploying to QA...

  deploy-prod:
    name: Deploy to Prod
    needs: [build, deploy-dev, deploy-qa]    
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main')
    environment:
      name: prod
      url: http://www.example.com
    steps:
      - name: Deploy to Prod Env
        run: echo Deploying to Prod...